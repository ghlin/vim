snippet hd "headsome" !b
/*
 *       _,.--.,_                             _,.--.,_
 *      |  _____ |                           | _____  |
 *      |-'     \`'._________________________,'\`     \`-|
 *    ,'    ___    \`.                     ,'     .-.   \`\`.
 *   /     |   |     \\                   /      (/_\\)     \\
 *  !  ___  \\ /  ___  |                 !   ,-.  \`-'  ,-.  |
 *  | |___>     <___| !_SELECT   START__|  ([ ])     ( O ) !
 *  !       / \\      ____\`-.       .-'____  \`-'  .-.  \`-'  |
 *  |\\     |___|   ,'    \`. \\     / ,'    \`.    ( X )     /|
 *  | \`~          /        \\ |   | /        \\    \`-'    ,' |
 *  |   \`-~___,-. \\        / |___| \\        / ,-.____,-'   |
 *  |           '\\ \`.____,' /     \\ \`.____,' /\`.           |
 *  |          /  \`-.____,-'       \`-.____,-'   \\          |
 *  \\         /                                  \\         /
 *   \\       /                                    \\       /
 *    \`.__,-'                                      \`-.__,'
 *
 *
 *                                GHL <2012.2.9.ghl@gmail.com>
 */

$0
endsnippet

snippet todo "a todo reminder" !bs
// ${1:TODO}: ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet xxx "a xxx reminder" !bs
// ${1:XXX}: ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet fixme "a fixme reminder" !bs
// ${1:FIXME}: ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet doxy "doxygen comment" !bs
/**
 * $1
 */$0
endsnippet

snippet comment "a nice comment" !bs
/*
 * $1
 */
$0
endsnippet

snippet ghl "My notes"
/* ghlin: $0 - `!v strftime("%F %T")` */
endsnippet

snippet ghlin "My notes"
/* ghlin: $0 - `!v strftime("%F %T")` */
endsnippet

snippet ghli "My notes"
/* ghlin: $0 - `!v strftime("%F %T")` */
endsnippet

snippet page "router" !b
import * as debug from 'debug';
import * as E     from 'express';

import 'space-lift';

import wx     from '../middleware/wxsession';
import db     from '../lib/database';
import errs   from '../lib/errordefs';
import * as U from '../middleware/auth';

const log    = debug('Exciting:${1}');
const router = E.Router();

export default router;

$0
endsnippet

snippet route "router" !b
router.${1:get}('${2:/}', async (req, res, next) => {
	$0
});
endsnippet

snippet try "try-catch" !b
try {
	$1
}
catch (err) {
	log(\`Ooooops: ${err.message}\`);
	$0
}
endsnippet

snippet trynext "try-catch-next" !b
try {
	$0
}
catch (err) {
	log(\`Ooooops: ${err.message}\`);
	return next(err);
}
endsnippet

snippet midw "middleware signature"
(req: E.Request, res: E.Response, next: E.NextFunction)
endsnippet

snippet imp "import { }" !b
import { $1 } from '$2';
$0
endsnippet

snippet impo "import * as" !b
import * as $1 from '$2';
$0
endsnippet

snippet impd "import debug" !b
import * as debug from 'debug';
const log = debug('${1:`!v ProjectNameGuess()`}');
$0
endsnippet

